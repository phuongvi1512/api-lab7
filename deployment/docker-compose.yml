services:
  receiver:
    build: ../receiver
    environment:
      - TARGET_ENV=test
    ports:
      - "8080:8080"
    hostname: receiver
    volumes:
      - /home/azureuser/config/receiver:/config
      - /home/azureuser/logs/:/logs
    depends_on:
      - "storage"
      - "kafka"

  storage:
    build: ../storage
    environment:
      - TARGET_ENV=test
    ports:
      - "8090:8090"
    hostname: storage
    volumes:
      - /home/azureuser/config/storage:/config
      - /home/azureuser/logs/:/logs
    expose:
      - '8090'
    depends_on:
      - "db"
      - "kafka"
      - "zookeeper"

  processing:
    build: ../processing
    environment:
      - TARGET_ENV=test    
    volumes:
      - /home/azureuser/config/processing:/config
      - /home/azureuser/logs/:/logs
      - processing-db:/data
    hostname: processing
    network_mode: host
    depends_on:
      - "db"

  audit_log:
    build: ../audit_log
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/audit_log:/config
      - /home/azureuser/logs/:/logs
    ports:
      - "8110:8110"
    hostname: audit_log
    depends_on:
      - "processing"

  dashboard:
    build: ../dashboard
    ports:
      - "8888:80"
    depends_on:
      - "processing"
      - "audit_log"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    volumes:
      - /home/azureuser/zookeeper/data:/opt/zookeeper-3.4.13/data
    hostname: zookeeper

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    expose:
      - '9092'
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1"
      KAFKA_CREATE_TOPICS: "event_log:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/azureuser/kafka:/kafka/kafka-logs
    depends_on:
      - zookeeper

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql

volumes:
  my-db:
  processing-db: